name: Build and Deploy to AKS

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  ACR_NAME: mytestACRRegistry2
  IMAGE_NAME: simple-python-app
  AKS_RESOURCE_GROUP: rg-sumaira-practice
  AKS_CLUSTER_NAME: AKS-test-github-actions
  LOGIN_SERVER: ${{ env.ACR_NAME }}.azurecr.io

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # Use GitHub-hosted Ubuntu runner

    steps:
    - uses: actions/checkout@v3

    # 1. Login to ACR using Access Keys
    - name: ACR Login
      uses: azure/docker-login@v2
      with:
        login-server: ${{ env.LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    # 2. Build and Push Docker Image
    - name: Build and push Docker image
      run: |
        docker build -t $LOGIN_SERVER/$IMAGE_NAME:${{ github.sha }} .
        docker push $LOGIN_SERVER/$IMAGE_NAME:${{ github.sha }}

    # 3. Get AKS Credentials (needs Azure CLI login or kubeconfig)
    - name: Azure Login (CLI)
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Get AKS credentials
      run: |
        az aks get-credentials \
          --resource-group $AKS_RESOURCE_GROUP \
          --name $AKS_CLUSTER_NAME \
          --overwrite-existing

    # 4. Deploy to AKS
    - name: Deploy to AKS
      run: |
        kubectl set image deployment/simple-python-app simple-python-app=$LOGIN_SERVER/$IMAGE_NAME:${{ github.sha }}
        kubectl rollout status deployment/simple-python-app

