name: Build and Deploy to AKS

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  ACR_NAME: acrtestingaks
  IMAGE_NAME: simple-python-app
  AKS_RESOURCE_GROUP: rg-sumaira-practice
  AKS_CLUSTER_NAME: AKS-test-github-actions
  LOGIN_SERVER: acrtestingaks.azurecr.io

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout code
    - uses: actions/checkout@v3

    # 2. Azure Login
    - name: Azure Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # 3. Azure Container Registry Login
    - name: Azure ACR Login
      run: az acr login --name ${{ env.ACR_NAME }}

    # 4. Build and Push Docker Image
    - name: Build and push Docker image
      run: |
        docker build -t ${{ env.LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
        docker push ${{ env.LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

    # 5. Get AKS Credentials
    - name: Get AKS credentials
      run: |
        az aks get-credentials \
          --resource-group ${{ env.AKS_RESOURCE_GROUP }} \
          --name ${{ env.AKS_CLUSTER_NAME }} \
          --overwrite-existing

    # 6. Deploy to AKS (create or update deployment)
    - name: Deploy to AKS
      run: |
        kubectl apply -f aks/deployment.yaml
        kubectl set image deployment/simple-python-app simple-python-app=${{ env.LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        kubectl rollout status deployment/simple-python-app

